### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthOutput {
  ErrorFieldOutput: [ErrorFieldOutput!]
  IOutput: IOutput!
  User: User
}

input ChangePasswordInput {
  password: String!
  token: String!
}

input CreateInterestInput {
  interest_name: String!
}

input CreateProfileInput {
  profile_avatar: Upload
  profile_bio: String
  profile_interest: [CreateInterestInput]!
  profile_wallpaper: Upload
}

"""Date custom scalar type"""
scalar Date

input DestroyImageInput {
  img_public_id: String!
}

type ErrorFieldOutput {
  field: String!
  message: String!
}

input ForgotPasswordInput {
  email: String!
}

type GetManyInterestOutput {
  IOutput: IOutput!
  Interest: [Interest]
}

input GetManyProfilesInput {
  cursor: Date
  search_input: String
  take: Int!
}

type GetManyProfilesOutput {
  IOutput: IOutput!
  PageInfo: PageInfo
  Profile: [Profile]
}

type IOutput {
  code: Int!
  message: String!
  success: Boolean!
}

type Interest {
  id: ID!
  interest_name: String
  profile_interests: [ProfileInterest!]!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(input: ChangePasswordInput!): AuthOutput
  connectBuddy(input: RelationshipInput!): RelationshipOutput
  createProfile(input: CreateProfileInput!): ProfileMutationOutput
  forgotPassword(input: ForgotPasswordInput!): AuthOutput
  login(input: LoginInput!): AuthOutput!
  logout: AuthOutput!
  register(input: RegisterInput!): AuthOutput!
  removeAvatar(input: DestroyImageInput!, where: ProfileWhereUniqueInput!): ProfileMutationOutput
  removeBuddy(input: RelationshipInput!): RelationshipOutput
  removeWallpaper(input: DestroyImageInput!, where: ProfileWhereUniqueInput!): ProfileMutationOutput
  respondBuddy(input: RelationshipInput!): RelationshipOutput
  updateProfile(input: CreateProfileInput!, where: ProfileWhereUniqueInput!): ProfileMutationOutput
  verifyEmail(input: VerifyEmailInput!): AuthOutput!
}

enum NotificationType {
  ADMIN
  COMMENT_CREATED
  COMMENT_LIKED
  POST_CREATED
  POST_LIKED
  RELATIONSHIP_ACCEPT
  RELATIONSHIP_REQUEST
  USER
}

type PageInfo {
  endCursor: Date
  hasNextPage: Boolean
}

type Profile {
  buddies: [Relationship]
  buddyPendings: [Relationship]
  buddyRequests: [Relationship]
  createdAt: Date
  id: ID!
  profile_avatar: String
  profile_avatar_public_id: String
  profile_bio: String
  profile_interests: [ProfileInterest]
  profile_wallpaper: String
  profile_wallpaper_public_id: String
  user: User
}

type ProfileInterest {
  interest: Interest!
  interest_id: ID!
  profile: Profile!
  profile_id: ID!
}

type ProfileMutationOutput {
  IOutput: IOutput!
  Profile: Profile
}

input ProfileWhereUniqueInput {
  profile_id: ID!
}

type Query {
  getManyInterests(where: getManyInterestsInput!): GetManyInterestOutput
  getManyProfiles(where: GetManyProfilesInput!): GetManyProfilesOutput
  getProfile(where: ProfileWhereUniqueInput!): ProfileMutationOutput
  getUser: User
}

input RegisterInput {
  email: String!
  password: String!
  username: String!
}

type Relationship {
  addressee_id: String!
  createdAt: Date!
  requester_id: String!
  specifier_id: String!
  status: RelationshipStatusCode!
  updatedAt: Date!
}

input RelationshipInput {
  addressee_id: String!
  requester_id: String!
  specifier_id: String!
  status: RelationshipStatusCode!
}

type RelationshipOutput {
  IOutput: IOutput!
  Relationship: Relationship
}

enum RelationshipStatusCode {
  ACCEPTED
  DECLINED
  REQUESTED
}

type Subscription {
  truths: Boolean
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  email: String!
  id: ID!
  isVerified: Boolean!
  profile: Profile
  username: String!
}

input VerifyEmailInput {
  token: String!
}

input getManyInterestsInput {
  search_input: String
}
