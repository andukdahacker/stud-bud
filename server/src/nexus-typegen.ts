/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context as Context } from "./context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * The `Upload` scalar type represents a file upload.
     */
    upload<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Upload";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * The `Upload` scalar type represents a file upload.
     */
    upload<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Upload";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ChangePasswordInput: { // input type
    password: string; // String!
    token: string; // String!
  }
  CreateInterestInput: { // input type
    interest_name: string; // String!
  }
  CreateProfileInput: { // input type
    profile_avatar?: NexusGenScalars['Upload'] | null; // Upload
    profile_bio?: string | null; // String
    profile_interest: Array<NexusGenInputs['CreateInterestInput'] | null>; // [CreateInterestInput]!
  }
  ForgotPasswordInput: { // input type
    email: string; // String!
  }
  GetManyProfilesInput: { // input type
    search_input?: string | null; // String
  }
  LoginInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  ProfileWhereUniqueInput: { // input type
    profile_id: string; // ID!
  }
  RegisterInput: { // input type
    email: string; // String!
    password: string; // String!
    username: string; // String!
  }
  VerifyEmailInput: { // input type
    token: string; // String!
  }
  getManyInterestsInput: { // input type
    search_input?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Upload: any
}

export interface NexusGenObjects {
  AuthOutput: { // root type
    ErrorFieldOutput?: NexusGenRootTypes['ErrorFieldOutput'][] | null; // [ErrorFieldOutput!]
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    User?: NexusGenRootTypes['User'] | null; // User
  }
  ErrorFieldOutput: { // root type
    field: string; // String!
    message: string; // String!
  }
  GetManyInterestOutput: { // root type
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    Interest?: Array<NexusGenRootTypes['Interest'] | null> | null; // [Interest]
  }
  GetManyProfilesOutput: { // root type
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    Profile?: Array<NexusGenRootTypes['Profile'] | null> | null; // [Profile]
  }
  GetProfileOutput: { // root type
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    Profile?: NexusGenRootTypes['Profile'] | null; // Profile
  }
  IOutput: { // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  }
  Interest: { // root type
    id: string; // ID!
    interest_name?: string | null; // String
  }
  Mutation: {};
  Profile: { // root type
    id: string; // ID!
    profile_avatar?: string | null; // String
    profile_bio?: string | null; // String
  }
  ProfileInterest: { // root type
    interest_id: string; // ID!
    profile_id: string; // ID!
  }
  ProfileMutationOutput: { // root type
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    Profile?: NexusGenRootTypes['Profile'] | null; // Profile
  }
  Query: {};
  User: { // root type
    email: string; // String!
    id: string; // ID!
    isVerified: boolean; // Boolean!
    username: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  AuthOutput: { // field return type
    ErrorFieldOutput: NexusGenRootTypes['ErrorFieldOutput'][] | null; // [ErrorFieldOutput!]
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    User: NexusGenRootTypes['User'] | null; // User
  }
  ErrorFieldOutput: { // field return type
    field: string; // String!
    message: string; // String!
  }
  GetManyInterestOutput: { // field return type
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    Interest: Array<NexusGenRootTypes['Interest'] | null> | null; // [Interest]
  }
  GetManyProfilesOutput: { // field return type
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    Profile: Array<NexusGenRootTypes['Profile'] | null> | null; // [Profile]
  }
  GetProfileOutput: { // field return type
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    Profile: NexusGenRootTypes['Profile'] | null; // Profile
  }
  IOutput: { // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  }
  Interest: { // field return type
    id: string; // ID!
    interest_name: string | null; // String
    profile_interests: NexusGenRootTypes['ProfileInterest'][]; // [ProfileInterest!]!
  }
  Mutation: { // field return type
    changePassword: NexusGenRootTypes['AuthOutput'] | null; // AuthOutput
    createProfile: NexusGenRootTypes['ProfileMutationOutput'] | null; // ProfileMutationOutput
    forgotPassword: NexusGenRootTypes['AuthOutput'] | null; // AuthOutput
    login: NexusGenRootTypes['AuthOutput']; // AuthOutput!
    logout: NexusGenRootTypes['AuthOutput']; // AuthOutput!
    register: NexusGenRootTypes['AuthOutput']; // AuthOutput!
    removeAvatar: NexusGenRootTypes['ProfileMutationOutput'] | null; // ProfileMutationOutput
    updateProfile: NexusGenRootTypes['ProfileMutationOutput'] | null; // ProfileMutationOutput
    verifyEmail: NexusGenRootTypes['AuthOutput']; // AuthOutput!
  }
  Profile: { // field return type
    id: string; // ID!
    profile_avatar: string | null; // String
    profile_bio: string | null; // String
    profile_interests: Array<NexusGenRootTypes['ProfileInterest'] | null> | null; // [ProfileInterest]
    user: NexusGenRootTypes['User'] | null; // User
  }
  ProfileInterest: { // field return type
    interest: NexusGenRootTypes['Interest']; // Interest!
    interest_id: string; // ID!
    profile: NexusGenRootTypes['Profile']; // Profile!
    profile_id: string; // ID!
  }
  ProfileMutationOutput: { // field return type
    IOutput: NexusGenRootTypes['IOutput']; // IOutput!
    Profile: NexusGenRootTypes['Profile'] | null; // Profile
  }
  Query: { // field return type
    getManyInterests: NexusGenRootTypes['GetManyInterestOutput'] | null; // GetManyInterestOutput
    getManyProfiles: NexusGenRootTypes['GetManyProfilesOutput'] | null; // GetManyProfilesOutput
    getProfile: NexusGenRootTypes['GetProfileOutput'] | null; // GetProfileOutput
    getUser: NexusGenRootTypes['User'] | null; // User
  }
  User: { // field return type
    email: string; // String!
    id: string; // ID!
    isVerified: boolean; // Boolean!
    profile: NexusGenRootTypes['Profile'] | null; // Profile
    username: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  AuthOutput: { // field return type name
    ErrorFieldOutput: 'ErrorFieldOutput'
    IOutput: 'IOutput'
    User: 'User'
  }
  ErrorFieldOutput: { // field return type name
    field: 'String'
    message: 'String'
  }
  GetManyInterestOutput: { // field return type name
    IOutput: 'IOutput'
    Interest: 'Interest'
  }
  GetManyProfilesOutput: { // field return type name
    IOutput: 'IOutput'
    Profile: 'Profile'
  }
  GetProfileOutput: { // field return type name
    IOutput: 'IOutput'
    Profile: 'Profile'
  }
  IOutput: { // field return type name
    code: 'Int'
    message: 'String'
    success: 'Boolean'
  }
  Interest: { // field return type name
    id: 'ID'
    interest_name: 'String'
    profile_interests: 'ProfileInterest'
  }
  Mutation: { // field return type name
    changePassword: 'AuthOutput'
    createProfile: 'ProfileMutationOutput'
    forgotPassword: 'AuthOutput'
    login: 'AuthOutput'
    logout: 'AuthOutput'
    register: 'AuthOutput'
    removeAvatar: 'ProfileMutationOutput'
    updateProfile: 'ProfileMutationOutput'
    verifyEmail: 'AuthOutput'
  }
  Profile: { // field return type name
    id: 'ID'
    profile_avatar: 'String'
    profile_bio: 'String'
    profile_interests: 'ProfileInterest'
    user: 'User'
  }
  ProfileInterest: { // field return type name
    interest: 'Interest'
    interest_id: 'ID'
    profile: 'Profile'
    profile_id: 'ID'
  }
  ProfileMutationOutput: { // field return type name
    IOutput: 'IOutput'
    Profile: 'Profile'
  }
  Query: { // field return type name
    getManyInterests: 'GetManyInterestOutput'
    getManyProfiles: 'GetManyProfilesOutput'
    getProfile: 'GetProfileOutput'
    getUser: 'User'
  }
  User: { // field return type name
    email: 'String'
    id: 'ID'
    isVerified: 'Boolean'
    profile: 'Profile'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    changePassword: { // args
      input: NexusGenInputs['ChangePasswordInput']; // ChangePasswordInput!
    }
    createProfile: { // args
      input: NexusGenInputs['CreateProfileInput']; // CreateProfileInput!
    }
    forgotPassword: { // args
      input: NexusGenInputs['ForgotPasswordInput']; // ForgotPasswordInput!
    }
    login: { // args
      input: NexusGenInputs['LoginInput']; // LoginInput!
    }
    register: { // args
      input: NexusGenInputs['RegisterInput']; // RegisterInput!
    }
    removeAvatar: { // args
      where: NexusGenInputs['ProfileWhereUniqueInput']; // ProfileWhereUniqueInput!
    }
    updateProfile: { // args
      input: NexusGenInputs['CreateProfileInput']; // CreateProfileInput!
      where: NexusGenInputs['ProfileWhereUniqueInput']; // ProfileWhereUniqueInput!
    }
    verifyEmail: { // args
      input: NexusGenInputs['VerifyEmailInput']; // VerifyEmailInput!
    }
  }
  Query: {
    getManyInterests: { // args
      where: NexusGenInputs['getManyInterestsInput']; // getManyInterestsInput!
    }
    getManyProfiles: { // args
      where: NexusGenInputs['GetManyProfilesInput']; // GetManyProfilesInput!
    }
    getProfile: { // args
      where: NexusGenInputs['ProfileWhereUniqueInput']; // ProfileWhereUniqueInput!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}