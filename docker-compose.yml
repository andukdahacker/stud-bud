version: "3.8"

services:
  server:
    container_name: server
    build:
      context: server
      target: production
      dockerfile: prod.Dockerfile
    image: sparklestudbud/sparkle-registry:server
    restart: always
    tty: true
    ports:
      - 4000:4000
    depends_on:
      - postgres
      - redis
    networks:
      - back-tier
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - SESSION_SECRET=${SESSION_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - CLOUDINARY_CLOUDNAME=${CLOUDINARY_CLOUDNAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - back-tier
    volumes:
      - pgdata:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8080:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PG_LISTEN_PORT=${PG_LISTEN_PORT}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - back-tier

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - 6379:6379
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - back-tier
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:
  pgadmin-data:

networks:
  back-tier:
