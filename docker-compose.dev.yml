version: "3.8"

services:
  postgres:
    container_name: dev_postgres
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - back-tier
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8080:80
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PG_LISTEN_PORT=${PG_LISTEN_PORT}
    depends_on:
      - postgres
    networks:
      - back-tier
  redis:
    container_name: dev_redis
    image: redis
    restart: always
    env_file:
      - .env
    networks:
      - back-tier
  server:
    container_name: dev_server
    build:
      context: server
      dockerfile: dev.Dockerfile
      target: development
    volumes:
      - ./server:/usr/src/server
      - /usr/src/server/node_modules
    ports:
      - 4000:4000
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - back-tier
      - front-tier
  client:
    container_name: dev_client
    build:
      context: client
      dockerfile: dev.Dockerfile
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./client/src:/client/src
      - ./client/public:/client/public
    networks:
      - front-tier
    depends_on:
      - server

networks:
  back-tier:
  front-tier:
